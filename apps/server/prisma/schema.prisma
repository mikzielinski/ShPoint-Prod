generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id           String     @id @default(cuid())
  email        String     @unique
  name         String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  avatarUrl    String?
  role         Role       @default(USER)
  lastLoginAt  DateTime?
  status       UserStatus @default(ACTIVE)
  image        String?
  passwordHash String?
  cards        Card[]
  collections  Collection[]

  @@index([createdAt])
  @@index([email])
  @@index([role])
  @@index([status])
}

model Card {
  id          String     @id @default(cuid())
  title       String
  slug        String     @unique
  body        Json?
  status      CardStatus @default(DRAFT)
  createdById String
  publishedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  createdBy   User       @relation(fields: [createdById], references: [id])

  @@index([slug])
  @@index([status, publishedAt])
  @@index([createdAt])
}

enum Role {
  GUEST
  USER
  EDITOR
  ADMIN
}

enum UserStatus {
  ACTIVE
  SUSPENDED
}

enum CardStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model Collection {
  id        String   @id @default(cuid())
  userId    String
  title     String?  // np. "My Painted", "Wishlist"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  items  CollectionItem[]

  @@index([userId])
  @@index([createdAt])
}

model CollectionItem {
  id           String       @id @default(cuid())
  collectionId String
  cardId       String       // ID jednostki/karty (Primary/Secondary/Support/Mission)
  status       ItemStatus   @default(OWNED) // OWNED/PAINTED/WISHLIST
  notes        String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  collection Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)

  @@unique([collectionId, cardId])
  @@index([collectionId])
  @@index([cardId])
  @@index([status])
}

enum ItemStatus {
  OWNED
  PAINTED
  WISHLIST
}
